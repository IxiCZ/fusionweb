<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core" template="/template.xhtml"
	xmlns:util="http://java.sun.com/jsf/composite/util"
	xmlns:c="http://java.sun.com/jsp/jstl/core">

	<ui:define name="title">
        About
    </ui:define>

	<ui:define name="body">
		<div align="center">
			<h:outputText value="About" styleClass="aboutTitle" />
		</div>
		<br />
		<h:outputText value="Introduction" styleClass="aboutheader" />
		<br />
		<br />
		This application demonstrates the utilization of Complex Event Processing within the scope of web applications.
		It percives the action users perform as the events. The events are then processed by means of rule engine with event
		processing capabilities. When the rules are triggered, they generate appropriate response such as notification, statistics or layout change. 
		The events can also be viewed as assembled units which can be used as monitoring of users logged in.
		<br />
		<br />
		<br />
		<h:outputText value="Roles" styleClass="aboutheader" />
		<br />
		<br />
		The application can be browsed as one of the following roles: 
		<h:outputText value="anonymous user" styleClass="italic" />, 
		<h:outputText value="customer" styleClass="italic" /> and 
		<h:outputText value="administrator" styleClass="italic" />. 
		For the easier use, the direct logging links are displayed in the right corner.<br />
		<br />
		<div align="center">
			<h:graphicImage library="images" name="easyLogIn.png" />
		</div>
		<br />
		With the use of common Log in link, there are three customers that can be applied (username/password): rick/1234, will/1234/, frodo/1234 and one adiminstrator: hugo/1234.
		Apart from that, new customer can be registered via Register link. 
		<br />
		<br />
		Any user can search,browse or view the products and add them to the shopping cart. However only a customer can perform the checkout and create the order.
		Administers can manage the content in a standard way, such as product, or orders administration. Furthermore then can utilize the event processing capabilities. 
		Relevant menu items can be found in the Administration menu (logging in as administrator is required).   
		<br />
		<div align="center">
			<h:graphicImage library="images" name="adminEventsMenu.png" />
		</div>
		<br />
		<br />
		<h:outputText value="Notifications" styleClass="aboutheader" />
		<br />
		<br />
		As events meets a defined state, rules consequence is executed and notification can be created.
		 Notifications in the picture below are the ones created not more than once an hour. 
		 You can easily try the situation by registrating 3 times within an hour, or making an order - 
		 by modyfing the number of items in the shopping cart across one or multiple orders
		  - for more than 100 products (these numbers are established in rules and are just demonstratory,
		 real numbers would originated in application analysis).
		<br />
		<br />
		<div align="center">
			<h:graphicImage library="images" name="notificationsS.png"
				width="720px" />
		</div>
		<br />
		To execute another notification rule, try to make a comment containing either "help" or "amazon".
		<br />
		<br />
		<br />
		<h:outputText value="Statistics" styleClass="aboutheader" />
		<br />
		<br />
		The events are also processed in every hour and day period to generate statistics. Same as notifications, statistics can be filtered by their character and paged from newest to oldest.
		<br />
		<br />
		<div align="center">
			<h:graphicImage library="images" name="statistics.png" width="720px" />
		</div>
		<br />
		<br />
		<br />
		<h:outputText value="Monitoring" styleClass="aboutheader" />
		<br />
		<br />
		Events relating to a certain customer can be observed in a chronological order and present what and how are the user currently brosing the website.
		 <br />
		<br />
		<div align="center">
			<h:graphicImage library="images" name="monitoring.png" width="720px" />
		</div>
		<br />
		<br />
		<br />
		<h:outputText value="Layout" styleClass="aboutheader" />
		<br />
		Layout is changed in accordance with defined logic relating to what are users currently doing. 
		This is demonstrated by changing main product every whole hour (x.00) for the one most visited in the last hour.
		 <br />
		<br />
		<div align="center">
			<h:graphicImage library="images" name="mainProducts.png"
				width="500px" />
		</div>
	</ui:define>

</ui:composition>
